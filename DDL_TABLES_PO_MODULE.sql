-- CREATE SCHEMA PURCHASE_ORDER_MODULE;
 -- USE PURCHASE_ORDER_MODULE;
 /*
DROP TABLE STOCK;
DROP TABLE PRODUCTS_REQUESTED_IN_THE_PO;
DROP TABLE PURCHASE_ORDER;
DROP TABLE KAM;
DROP TABLE PRODUCTS;
DROP TABLE BUSINESS;
 */
 
 
 /*
Tabla del negocio que quiere utilizar el módulo de orden de compra, un ejemplo seria la marca Coca Cola la cual quiera venderle
sus productos a otros negocios.
*/
CREATE TABLE IF NOT EXISTS BUSINESS (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    , NAME VARCHAR(1000)
    , TAX_ID INT NOT NULL UNIQUE
    , ADDRESS VARCHAR(1000)
    , LEGAL_NAME VARCHAR(1000)
    , COUNTRY VARCHAR(1000)
);
/*
Tabla que almacena los comerciales de la empresa que vende los productos.
*/
CREATE TABLE IF NOT EXISTS KAM (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    , NAME VARCHAR(1000)
    , LAST_NAME VARCHAR(1000) 
    , IDENTIFICATIO_CARD INT NOT NULL UNIQUE
    , BIRTHDAY DATE
    , COUNTRY VARCHAR(1000)
    , BUSINESS_ID INT
    , FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(ID)
);

/*
Tabla que almacena la información legal que surge de la negociación entre los comerciales de cada empresa.
*/

CREATE TABLE IF NOT EXISTS PURCHASE_ORDER (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    , LEGAL_PURCHASE_ORDER_ID VARCHAR(10000)
    , TERMS_AND_CONDITIONS VARCHAR(1000) 
    , LEGAL_SIGNATURE INT NOT NULL UNIQUE
    , KAM_CLIENTS_ID INT
    , KAM_BUSINESS_ID INT 
    , FOREIGN KEY (KAM_CLIENTS_ID) REFERENCES KAM(ID)
    , FOREIGN KEY (KAM_BUSINESS_ID) REFERENCES KAM(ID)
);

/*
Tabla que almacena la información de los productos que vende el negocio.
*/
CREATE TABLE IF NOT EXISTS PRODUCTS (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    , NAME VARCHAR(1000)
    , DESCRIPTION VARCHAR(1000)
    , EXPIRATION_DAYS INT
    , PRICE DOUBLE
	, BUSINESS_ID INT
    , FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(ID)
);

/*
Tabla que almacena la información de los productos vendidos en una orden de compra, dice cuántas unidades se vendieron 
 y si hubo algún descuento en la negociación.
*/
CREATE TABLE IF NOT EXISTS PRODUCTS_REQUESTED_IN_THE_PO (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    , NEGOTIATION_DESCRIPTION VARCHAR(1000)
    , DISCOUNT DATE
	, UNITS INT
    , PRODUCT_ID INT
    , PURCHASE_ORDER_ID INT
    , FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
    , FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDER(ID)
);

/*
Tabla que almacena las unidades por producto disponibles y la orden de compra 
a la que fue asignada la unidad (de haberse utilizado).
*/
CREATE TABLE IF NOT EXISTS STOCK (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    , DESCRIPTION VARCHAR(1000)
    , ARRIVAL_DATE DATE
	, SUPPLIER VARCHAR(1000)
	, ARRIVAL_CODE INT UNIQUE
    , PRODUCT_ID INT
    , REQUESTED_PO_ID INT
    , FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
    , FOREIGN KEY (REQUESTED_PO_ID) REFERENCES PRODUCTS_REQUESTED_IN_THE_PO(ID)
);
